#include<stdio.h>
#include<string.h>

void main()
{
int i,j,f,z,kl,m,n,pl;
int f1,f2,s1,s2,q,w,d,ff;
char p[100],k[100],c[100],a[100],ma[50][50];
printf("Enter Your Choice For PlayFair:\n");
printf("1. PlainText To CipherText\n");
printf("2. CipherText To PlainText\n");
scanf("%d",&n);
printf("Enter Text In Caps\n");

switch(n)
{
case 1:
{
printf("Enter PlainText:\n");
scanf("%s",p);
printf("Enter Key:\n");
scanf("%s",k);
kl=strlen(k);
pl=strlen(p);	
	
////////////////////REPLACING J WITH I
for(i=0;i<pl;i++)
{
	if(p[i]=='J')
	{
		p[i]='I';
	}
}
printf("\nAfter replacing j with i(PlainText): %s",p);
for(i=0;i<kl;i++)
{
	if(k[i]=='J')
	{
		k[i]='I';
	}
}
printf("\nAfter replacing j with i(Key): %s",k);

////////////////////REMOVING MULTIPLE CHARACTER FROM KEY
for(i=0;i<kl;i++)
{
	for(j=i+1;j<kl;j++)
	{
		if(k[i]!='"' && k[j]!='"')
		{
			if(k[i]==k[j])
			{
				k[j]='"';
			}
		}
	}
}
for(i=0;i<kl;i++)
{
	while(k[i]=='"')
	{
		for(j=i;j<kl;j++)
		{
			k[j]=k[j+1];
		}
		k[kl-1]='\0';
	}
}
printf("\nModified Key: %s",k);
kl=strlen(k);

////////////////////CONTENT IN 5X5 MATRIX
for(i=0;i<=25;i++)
{
	if(i<kl)
	{
		a[i]=k[i];
	}
	else
	{
		f=0;
		for(m=65;m<=90;m++)
		{
			if(f==0)
			{
				for(j=0;j<i;j++)
				{
					if(m =='J')
					{
						f=1;
					}
					else if(a[j]==m)
					{
						f=1;
					}	
				}
				if(f==0)
				{
					a[i]=(char)m;
					m=100;
				}
				f=0;
			}
		}
	}
}
a[i++]='\0';
z=0;
printf("\n_____________________\n");
for(i=0;i<5;i++)
{
	for(j=0;j<5;j++)
	{
		ma[i][j] = a[z];
		z++;
	}
}
for(i=0;i<5;i++)
{
	for(j=0;j<5;j++)
	{
		printf("| %c ",ma[i][j]);
	}
	printf("|\n_____________________\n");
}

////////////////////DUMMY CHARACTER IN MIDDLE
pl=strlen(p);
f=0,ff=0,d=0;
for(i=0;i<pl;i=i+2)
{
	if(p[i]==p[i+1])
	{
		ff=pl;
		pl=pl+1;
		f=i+1;
		while(ff!=f)
		{
			p[ff]=p[ff-1];
			ff--;
		}
		p[ff]='X';
		d=1;
	}
}
p[pl]='\0';
pl=strlen(p);
if(d==1)
{
	printf("Modified PlainText(Dummy In Middle): %s \n",p);
}

////////////////////DUMMY CHARACTER AT LAST
pl=strlen(p);
if(pl%2!=0)
{
	p[pl]='X';
	p[pl+1]='\0';
	pl=strlen(p);
	printf("Modified PlainText(Dummy At Last): %s \n",p);
}

////////////////////LOGIC BEGINS
w=0;
for(q=0;q<pl;q++)
{
	f1=0,s1=0,f2=0,s2=0;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(ma[i][j]==p[q])
			{
				f1=i;
				f2=j;
			}
		}
	}
	q++;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(ma[i][j]==p[q])
			{
				s1=i;
				s2=j;
			}
		}
	}
	if((f1==s1)&&(f2>s2)&&(f2==4))
	{
		c[w]=ma[f1][(f2%4)];
		w++;
		c[w]=ma[s1][s2+1];
		w++;
	}
	else if((f1==s1)&&(f2<s2)&&(s2==4))
	{
		c[w]=ma[f1][f2+1];
		w++;
		c[w]=ma[s1][(s2%4)];
		w++;
	}
	else if((f1==s1)&&((f2>s2)||(f2<s2)))
	{
		c[w]=ma[f1][f2+1];
		w++;
		c[w]=ma[s1][s2+1];
		w++;
	}
	else if((f1<s1)&&(f2==s2)&&(s1==4))
	{
		c[w]=ma[f1+1][f2];
		w++;
		c[w]=ma[s1%4][s2];
		w++;
	}
	else if((f1>s1)&&(f2==s2)&&(f1==4))
	{
		c[w]=ma[f1%4][f2];
		w++;
		c[w]=ma[s1+1][s2];
		w++;
	}
	else if(((f1>s1)||(f1<s1))&&(f2==s2))
	{
		c[w]=ma[f1+1][f2];
		w++;
		c[w]=ma[s1+1][s2];
		w++;
	}
	else
	{
		c[w]=ma[f1][s2];
		w++;
		c[w]=ma[s1][f2];
		w++;
	}
}
c[w]='\0';
printf("\nCIPHER TEXT: %s",c);
}
break;

case 2:
{
printf("Enter CipherText:\n");
scanf("%s",p);
printf("Enter Key:\n");
scanf("%s",k);
kl=strlen(k);
pl=strlen(p);
		
////////////////////REPLACING J WITH I
for(i=0;i<pl;i++)
{
	if(p[i]=='J')
	{
		p[i]='I';
	}
}
printf("\nAfter replacing j with i(CipherText): %s",p);
for(i=0;i<kl;i++)
{
	if(k[i]=='J')
	{
		k[i]='I';
	}
}
printf("\nAfter replacing j with i(Key): %s",k);

////////////////////REMOVING MULTIPLE CHARACTER FROM KEY
for(i=0;i<kl;i++)
{
	for(j=i+1;j<kl;j++)
	{
		if(k[i]!='"' && k[j]!='"')
		{
			if(k[i]==k[j])
			{
				k[j]='"';
			}
		}
	}
}
for(i=0;i<kl;i++)
{
	while(k[i]=='"')
	{
		for(j=i;j<kl;j++)
		{
			k[j]=k[j+1];
		}
		k[kl-1]='\0';
	}
}
printf("\nModified Key: %s",k);
kl=strlen(k);

////////////////////CONTENT IN 5X5 MATRIX
for(i=0;i<=25;i++)
{
	if(i<kl)
	{
		a[i]=k[i];
	}
	else
	{
		f=0;
		for(m=65;m<=90;m++)
		{
			if(f==0)
			{
				for(j=0;j<i;j++)
				{
					if(m =='J')
					{
						f=1;
					}
					else if(a[j]==m)
					{
						f=1;
					}	
				}
				if(f==0)
				{
					a[i]=(char)m;
					m=100;
				}
				f=0;
			}
		}
	}
}
a[i++]='\0';
z=0;
printf("\n_____________________\n");
for(i=0;i<5;i++)
{
	for(j=0;j<5;j++)
	{
		ma[i][j] = a[z];
		z++;
	}
}
for(i=0;i<5;i++)
{
	for(j=0;j<5;j++)
	{
		printf("| %c ",ma[i][j]);
	}
	printf("|\n_____________________\n");
}

////////////////////MAIN LOGIC
pl=strlen(p);
w=0;
for(q=0;q<pl;q++)
{
	f1=0,s1=0,f2=0,s2=0;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(ma[i][j]==p[q])
			{
				f1=i;
				f2=j;
			}
		}
	}
	q++;
	for(i=0;i<5;i++)
	{
		for(j=0;j<5;j++)
		{
			if(ma[i][j]==p[q])
			{
				s1=i;
				s2=j;
			}
		}
	}
	if((f1==s1)&&(f2<s2)&&(f2==0))
	{
		c[w]=ma[f1][(f2+4)];
		w++;
		c[w]=ma[s1][s2-1];
		w++;
	}
	else if((f1==s1)&&(f2>s2)&&(s2==0))
	{
		c[w]=ma[f1][f2-1];
		w++;
		c[w]=ma[s1][(s2+4)];
		w++;
	}
	else if((f1==s1)&&((f2>s2)||(f2<s2)))
	{
		c[w]=ma[f1][f2-1];
		w++;
		c[w]=ma[s1][s2-1];
		w++;
	}
	else if((f1>s1)&&(f2==s2)&&(s1==0))
	{
		c[w]=ma[f1-1][f2];
		w++;
		c[w]=ma[s1+4][s2];
		w++;
	}
	else if((f1<s1)&&(f2==s2)&&(f1==0))
	{
		c[w]=ma[f1+4][f2];
		w++;
		c[w]=ma[s1-1][s2];
		w++;
	}
	else if(((f1>s1)||(f1<s1))&&(f2==s2))
	{
		c[w]=ma[f1-1][f2];
		w++;
		c[w]=ma[s1-1][s2];
		w++;
	}
	else
	{
		c[w]=ma[f1][s2];
		w++;
		c[w]=ma[s1][f2];
		w++;
	}
}
c[w]='\0';
printf("\nPLAIN TEXT: %s ",c);
}
break;

}
return;
}
